server:
  port: 8080

spring:
  application:
    name: governing-state
  datasource:
    driver-class-name: oracle.jdbc.OracleDriver
    url: jdbc:oracle:thin:@{ip}:{port}:{serviceName}
    username: username
    password: password
    hikari:
      connection-timeout: 10000
      maximum-pool-size: 25
  redis:
    #host: localhost #This line is used when running as a stand-alone spring boot service.
    host: my-redis-v1 #This line is used when running as a docker container. Using Redis server container name i.e., my-redis-v1 instead of local host
    port: 6379
  cloud:
    compatibility-verifier:
      enabled: false

management:
  endpoints:
    web:
      exposure:
        include: info, health, env

eureka:
  client:
    enabled: true
    register-with-eureka: true
    service-url:
      #defaultZone: http://localhost:8761/eureka  #This line is used when running as a stand-alone spring boot service
      defaultZone: http://eureka-server:8761/eureka #This line is used when running as a docker container. Using Eureka server container name i.e., eureka-server instead of local host

application:
  caches:
    default:
      time-to-live: 30000
      key-prefix: default-
      use-key-prefix: true
    governing-state:
      time-to-live: 60000
      key-prefix: governing-state-
      use-key-prefix: true

logging:
  file:
    name: /logs/governing-state-service.log